
# gtk specific build file.


builddir = build/linux
externaldir = external/linux
bindir = bin/linux


#cflags = -O2 -g3 -Wall 
cflags = -O2 -g3 
#cflags =  -g3 -Wall  

# pkg-config gtkmm-3.0  --cflags-only-I
gtkincludes = -I/usr/include/gtkmm-3.0 -I/usr/lib/x86_64-linux-gnu/gtkmm-3.0/include -I/usr/include/giomm-2.4 -I/usr/lib/x86_64-linux-gnu/giomm-2.4/include -I/usr/include/gtk-3.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gtk-3.0/unix-print -I/usr/include/gdkmm-3.0 -I/usr/lib/x86_64-linux-gnu/gdkmm-3.0/include -I/usr/include/atk-1.0 -I/usr/include/glibmm-2.4 -I/usr/lib/x86_64-linux-gnu/glibmm-2.4/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/sigc++-2.0 -I/usr/lib/x86_64-linux-gnu/sigc++-2.0/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gio-unix-2.0/ -I/usr/include/atkmm-1.6 -I/usr/include/pangomm-1.4 -I/usr/lib/pangomm-1.4/include -I/usr/include/cairomm-1.0 -I/usr/lib/cairomm-1.0/include

# eg. generated by # pkg-config gtkmm-2.4  --cflags-only-I
#gtkincludes = -I/usr/include/gtkmm-2.4 -I/usr/lib/gtkmm-2.4/include -I/usr/include/giomm-2.4 -I/usr/lib/giomm-2.4/include -I/usr/include/pangomm-1.4 -I/usr/lib/pangomm-1.4/include -I/usr/include/gtk-2.0 -I/usr/include/gtk-unix-print-2.0 -I/usr/include/atkmm-1.6 -I/usr/include/gdkmm-2.4 -I/usr/lib/gdkmm-2.4/include -I/usr/include/glibmm-2.4 -I/usr/lib/glibmm-2.4/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/sigc++-2.0 -I/usr/lib/sigc++-2.0/include -I/usr/include/cairomm-1.0 -I/usr/lib/cairomm-1.0/include -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gio-unix-2.0/

# root@debian:/home/meteo# pkg-config gtkmm-3.0  --libs
gtklibs = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lgtk-3 -lglibmm-2.4 -lcairomm-1.0 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lpango-1.0 -lcairo -lsigc-2.0 -lgobject-2.0 -lglib-2.0

# eg. generated by,  pkg-config gtkmm-2.4  --libs
#gtklibs = -pthread -lgtkmm-2.4 -latkmm-1.6 -lgdkmm-2.4 -lgiomm-2.4 -lpangomm-1.4 -lgtk-x11-2.0 -lglibmm-2.4 -lcairomm-1.0 -lsigc-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lm -lcairo -lpng12 -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0


includes= -I./include -I $externaldir/threadpool-0_2_5-src/threadpool/ -I $externaldir/boost/include/ -I $externaldir/proj/include/ -I $externaldir/agg-2.4/include $
	-I $externaldir/shapelib-1.2.10 -I $externaldir/freetype2/include/ -I $externaldir/freetype2/include/freetype2/ $gtkincludes $


# don't link all boost libs here, eg test which has main
# libws2_32.a shouldn't be here.
# externallibs= 
externallibs= $externaldir/agg-2.4/src/libagg.a $externaldir/freetype/lib/libfreetype.a  $
	$externaldir/shapelib-1.2.10/.libs/libshp.a   $externaldir/proj/lib/libproj.a  $
    $externaldir/boost/lib/libboost_system.a $externaldir/boost/lib/libboost_thread.a 

sharedlibs = $gtklibs   

rule cxx
  command = g++ -MMD -MF $out.d $cflags $includes -c $in -o $out
  description = CXX $out
  depfile = $out.d

rule ar
  command = ar crs $out $in
  description = AR $out

rule link
  command = g++  -o $out $in  $externallibs $sharedlibs
  description = LINK $out


##############################################

# service
#build $builddir/affine.o:       cxx src/service/affine.cpp 
#build $builddir/project.o:       cxx src/service/project.cpp 
#build $builddir/geometry_cleaner.o:  cxx src/service/geometry_cleaner.cpp 
#build $builddir/labeller.o:     cxx src/service/labeller.cpp 
#build $builddir/affine_controller.o:  cxx src/service/affine_controller.cpp
#build $builddir/proj_controller.o:  cxx src/service/proj_controller.cpp
#build $builddir/style_service.o:  cxx src/service/style_service.cpp
#build $builddir/service/renderer.o:     cxx src/service/renderer.cpp 


## common
build $builddir/common/timer.o:        cxx src/common/timer.cpp
build $builddir/common/logger.o:        cxx src/common/logger.cpp
build $builddir/common/grid.o:       cxx src/common/grid.cpp 
build $builddir/common/load_png.o:       cxx src/common/load_png.cpp 
build $builddir/common/load_shapefile.o:       cxx src/common/load_shapefile.cpp 
build $builddir/common/point_in_poly.o:       cxx src/common/point_in_poly.cpp 
build $builddir/common/contourer.o:        cxx src/common/contourer.cpp
build $builddir/common/load_font.o:        cxx src/common/load_font.cpp
build $builddir/common/desc.o:        cxx src/common/desc.cpp



## service
build $builddir/service/grid_editor.o:      cxx src/service/grid_editor.cpp 
build $builddir/service/position_editor.o:       cxx src/service/position_editor.cpp 
#build $builddir/service/projector.o:       cxx src/service/projector.cpp 
build $builddir/service/renderer.o:     cxx src/service/renderer.cpp 
build $builddir/service/fonts.o:     cxx src/service/fonts.cpp 
build $builddir/service/labels.o:     cxx src/service/labels.cpp 
build $builddir/service/layers.o:     cxx src/service/layers.cpp 
build $builddir/service/level_controller.o:     cxx src/service/level_controller.cpp 
build $builddir/service/valid_controller.o:     cxx src/service/valid_controller.cpp 
#build $builddir/service/gribs_service.o:     cxx src/service/gribs_service.cpp 


## aggregate
build $builddir/aggregate/cube_view.o:    cxx src/aggregate/cube_view.cpp 
build $builddir/aggregate/projection.o:    cxx src/aggregate/projection.cpp 
build $builddir/aggregate/shapes.o:    cxx src/aggregate/shapes.cpp 
build $builddir/aggregate/raster.o:    cxx src/aggregate/raster.cpp 
build $builddir/aggregate/anim.o:    cxx src/aggregate/anim.cpp 
build $builddir/aggregate/mapgrid.o:    cxx src/aggregate/mapgrid.cpp 
#build $builddir/aggregate/cube.o:    cxx src/aggregate/cube.cpp 

## command
build $builddir/command/load_gribs_from_gts.o:    cxx src/command/load_gribs_from_gts.cpp 


# change name of directory to grib ? the issue is test code ?, no it should be able to be combined
# grib_decode moved into common ? 
# data
build $builddir/data/grib_decode.o:    cxx src/data/grib_decode.cpp 

# tools
build $builddir/tools/dump_reports2.o: cxx src/tools/dump_reports2.cpp
build $builddir/tools/dump_reports3.o: cxx src/tools/dump_reports3.cpp
#build $builddir/tools/dump_gribs.o: cxx src/tools/dump_gribs.cpp


##
##	the concept of a library is not a very good one, from the standpoint of dep injection
##  and selecting the implementation in source code. at link time it is preferable to munge it all together 
##  without introducing library dependencies 
##

build $builddir/all.a:           $
     ar  $builddir/common/timer.o  $builddir/common/logger.o  $builddir/common/grid.o $builddir/common/load_png.o  $
     $builddir/common/load_shapefile.o $builddir/common/point_in_poly.o $builddir/common/contourer.o $builddir/common/load_font.o $
     $builddir/common/point_in_poly.o $builddir/common/desc.o $
     $
     $builddir/service/grid_editor.o $builddir/service/position_editor.o  $
     $builddir/service/renderer.o  $builddir/service/fonts.o $builddir/service/labels.o $builddir/service/layers.o $
     $builddir/service/level_controller.o $builddir/service/valid_controller.o   $
     $
     $builddir/aggregate/cube_view.o $builddir/aggregate/projection.o $builddir/aggregate/shapes.o $
     $builddir/aggregate/raster.o $builddir/aggregate/anim.o $builddir/aggregate/mapgrid.o  $
     $
     $builddir/data/grib_decode.o $
     $
     $builddir/command/load_gribs_from_gts.o


# test01
build $builddir/test/test01/main.o:  cxx test/test01/main.cpp
build $bindir/test01:           link $builddir/test/test01/main.o  $builddir/all.a


# grib test 
#build $builddir/test/data/main.o:  cxx test/data/main.cpp
#build $bindir/test02:           link $builddir/test/data/main.o $builddir/data/grib_decode.o  $externaldir/boost/lib/libboost_test_exec_monitor.a

## tools
build $bindir/tools/dump_reports2: link $builddir/tools/dump_reports2.o   
build $bindir/tools/dump_reports3: link $builddir/tools/dump_reports3.o   
#build $bindir/tools/dump_gribs: link $builddir/tools/dump_gribs.o   $builddir/data/grib_decode.o



#$builddir/all.a



